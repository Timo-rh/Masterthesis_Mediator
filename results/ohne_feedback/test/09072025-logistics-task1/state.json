{
  "natural_language_task": "Currently I've got five packages to ship, 3 in a storage in Ado and the rest in Betar's storage. Those from Ado should be sent 1 to Bal Street in Betar, 2 to Cli Promenade in Colin. Those from Betar should be moved to the Ado storage. The only plane is currently in Duran's airport, but each city has it's own truck and airport.",
  "domain_desc": "The AI agent here is a logistics planner that has to plan to transport packages within the locations in a city through a truck and between cities through an airplane. Within a city, the locations are directly linked, allowing trucks to travel between any two of these locations. Similarly, cities are directly connected to each other allowing airplanes to travel between any two cities. Also, there is no limit to how many packages a truck or plane can carry (so in theory a truck or plane can carry an infinite number of packages).",
  "domain_name": "logistics",
  "task_name": "task1",
  "types": [
    {
      "name": "city",
      "description": "A city contains locations and has its own truck and airport"
    },
    {
      "name": "location",
      "description": "A place within a city where packages can be picked up or delivered"
    },
    {
      "name": "street",
      "description": "A type of location within a city"
    },
    {
      "name": "storage",
      "description": "A type of location where packages can be stored"
    },
    {
      "name": "airport",
      "description": "A type of location where planes can land and take off"
    },
    {
      "name": "vehicle",
      "description": "A means of transport that can carry packages"
    },
    {
      "name": "truck",
      "description": "A type of vehicle that transports packages between locations within a city"
    },
    {
      "name": "airplane",
      "description": "A type of vehicle that transports packages between cities"
    },
    {
      "name": "package",
      "description": "An item that needs to be transported from one location to another"
    }
  ],
  "type_hierarchy": [
    {
      "parent_type": {
        "name": "object",
        "description": "Object is always root, everything is an object"
      },
      "child_types": [
        {
          "name": "city",
          "description": "A city contains locations and has its own truck and airport"
        },
        {
          "name": "vehicle",
          "description": "A means of transport that can carry packages"
        },
        {
          "name": "location",
          "description": "A place within a city where packages can be picked up or delivered"
        },
        {
          "name": "package",
          "description": "An item that needs to be transported from one location to another"
        }
      ]
    },
    {
      "parent_type": {
        "name": "vehicle",
        "description": "A means of transport that can carry packages"
      },
      "child_types": [
        {
          "name": "truck",
          "description": "A type of vehicle that transports packages between locations within a city"
        },
        {
          "name": "airplane",
          "description": "A type of vehicle that transports packages between cities"
        }
      ]
    },
    {
      "parent_type": {
        "name": "location",
        "description": "A place within a city where packages can be picked up or delivered"
      },
      "child_types": [
        {
          "name": "street",
          "description": "A type of location within a city"
        },
        {
          "name": "storage",
          "description": "A type of location where packages can be stored"
        },
        {
          "name": "airport",
          "description": "A type of location where planes can land and take off"
        }
      ]
    }
  ],
  "nominated_actions": [
    {
      "related_type": "truck",
      "name": "load_truck",
      "description": "A package is loaded onto a truck at a location. Requires that the package and the truck to be at the same location.",
      "usage_example": "Load package_1 onto truck_1 at storage_1"
    },
    {
      "related_type": "truck",
      "name": "unload_truck",
      "description": "A package is unloaded from a truck at a location. Requires that the package is in the truck and the truck is at the destination location.",
      "usage_example": "Unload package_2 from truck_2 at street_1"
    },
    {
      "related_type": "airplane",
      "name": "load_airplane",
      "description": "A package is loaded onto an airplane at an airport. Requires that the package and the airplane to be at the same airport.",
      "usage_example": "Load package_3 onto airplane_1 at airport_1"
    },
    {
      "related_type": "airplane",
      "name": "unload_airplane",
      "description": "A package is unloaded from an airplane at an airport. Requires that the package is in the airplane and the airplane is at the destination airport.",
      "usage_example": "Unload package_4 from airplane_1 at airport_2"
    },
    {
      "related_type": "truck",
      "name": "drive_truck",
      "description": "A truck drives from one location to another within the same city. All locations within a city are directly connected.",
      "usage_example": "Drive truck_1 from storage_1 to airport_1"
    },
    {
      "related_type": "airplane",
      "name": "fly_airplane",
      "description": "An airplane flies from one city's airport to another city's airport. All cities are directly connected.",
      "usage_example": "Fly airplane_1 from airport_1 to airport_2"
    }
  ],
  "predicates": [
    {
      "name": "at",
      "predicate_parameters": {
        "obj": "object",
        "loc": "location"
      },
      "description": "true if the object (package, truck, or airplane) is at the location"
    },
    {
      "name": "in",
      "predicate_parameters": {
        "pkg": "package",
        "veh": "vehicle"
      },
      "description": "true if the package is loaded in the vehicle (truck or airplane)"
    },
    {
      "name": "in_city",
      "predicate_parameters": {
        "loc": "location",
        "city": "city"
      },
      "description": "true if the location is in the specified city"
    },
    {
      "name": "in_truck",
      "predicate_parameters": {
        "pkg": "package",
        "truck": "truck"
      },
      "description": "true if the package is loaded in the truck"
    }
  ],
  "actions": [
    {
      "name": "load_truck",
      "description": "A package is loaded onto a truck at a location. Requires that the package and the truck to be at the same location.",
      "action_parameters": {
        "p": "package",
        "t": "truck",
        "l": "location"
      },
      "preconditions": {
        "and": [
          {
            "name": "at",
            "parameters": [
              "p",
              "l"
            ]
          },
          {
            "name": "at",
            "parameters": [
              "t",
              "l"
            ]
          },
          {
            "type": null,
            "conditions": {
              "name": "in",
              "parameters": [
                "p",
                "t"
              ]
            }
          }
        ]
      },
      "effects": {
        "and": [
          {
            "name": "in",
            "parameters": [
              "p",
              "t"
            ]
          },
          {
            "type": "not",
            "conditions": {
              "name": "at",
              "parameters": [
                "p",
                "l"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "unload_truck",
      "description": "A package is unloaded from a truck at a location. Requires that the package is in the truck and the truck is at the destination location.",
      "action_parameters": {
        "p": "package",
        "t": "truck",
        "l": "location"
      },
      "preconditions": {
        "and": [
          {
            "name": "in",
            "parameters": [
              "p",
              "t"
            ]
          },
          {
            "name": "at",
            "parameters": [
              "t",
              "l"
            ]
          }
        ]
      },
      "effects": {
        "and": [
          {
            "type": "not",
            "conditions": {
              "name": "in",
              "parameters": [
                "p",
                "t"
              ]
            }
          },
          {
            "name": "at",
            "parameters": [
              "p",
              "l"
            ]
          }
        ]
      }
    },
    {
      "name": "load_airplane",
      "description": "A package is loaded onto an airplane at an airport. Requires that the package and the airplane to be at the same airport.",
      "action_parameters": {
        "p": "package",
        "a": "airplane",
        "ap": "airport"
      },
      "preconditions": {
        "and": [
          {
            "name": "at",
            "parameters": [
              "p",
              "ap"
            ]
          },
          {
            "name": "at",
            "parameters": [
              "a",
              "ap"
            ]
          }
        ]
      },
      "effects": {
        "and": [
          {
            "type": "not",
            "conditions": {
              "name": "at",
              "parameters": [
                "p",
                "ap"
              ]
            }
          },
          {
            "name": "in",
            "parameters": [
              "p",
              "a"
            ]
          }
        ]
      }
    },
    {
      "name": "unload_airplane",
      "description": "A package is unloaded from an airplane at an airport. Requires that the package is in the airplane and the airplane is at the destination airport.",
      "action_parameters": {
        "p": "package",
        "a": "airplane",
        "ap": "airport"
      },
      "preconditions": {
        "and": [
          {
            "name": "in",
            "parameters": [
              "p",
              "a"
            ]
          },
          {
            "name": "at",
            "parameters": [
              "a",
              "ap"
            ]
          }
        ]
      },
      "effects": {
        "and": [
          {
            "type": "not",
            "conditions": {
              "name": "in",
              "parameters": [
                "p",
                "a"
              ]
            }
          },
          {
            "name": "at",
            "parameters": [
              "p",
              "ap"
            ]
          }
        ]
      }
    },
    {
      "name": "drive_truck",
      "description": "A truck drives from one location to another within the same city. All locations within a city are directly connected.",
      "action_parameters": {
        "t": "truck",
        "from": "location",
        "to": "location",
        "c": "city"
      },
      "preconditions": {
        "and": [
          {
            "name": "at",
            "parameters": [
              "t",
              "from"
            ]
          },
          {
            "name": "in_city",
            "parameters": [
              "from",
              "c"
            ]
          },
          {
            "name": "in_city",
            "parameters": [
              "to",
              "c"
            ]
          },
          {
            "name": "are_different",
            "parameters": [
              "from",
              "to"
            ]
          }
        ]
      },
      "effects": {
        "and": [
          {
            "type": "not",
            "conditions": {
              "name": "at",
              "parameters": [
                "t",
                "from"
              ]
            }
          },
          {
            "name": "at",
            "parameters": [
              "t",
              "to"
            ]
          }
        ]
      }
    },
    {
      "name": "fly_airplane",
      "description": "An airplane flies from one city's airport to another city's airport. All cities are directly connected.",
      "action_parameters": {
        "plane": "airplane",
        "from_city": "city",
        "to_city": "city"
      },
      "preconditions": {
        "and": [
          {
            "name": "at",
            "parameters": [
              "plane",
              "from_city"
            ]
          },
          {
            "name": "are_different",
            "parameters": [
              "from_city",
              "to_city"
            ]
          }
        ]
      },
      "effects": {
        "and": [
          {
            "type": "not",
            "conditions": {
              "name": "at",
              "parameters": [
                "plane",
                "from_city"
              ]
            }
          },
          {
            "name": "at",
            "parameters": [
              "plane",
              "to_city"
            ]
          }
        ]
      }
    }
  ],
  "object_instances": {
    "objects": {}
  },
  "initial_state": [
    {
      "name": "at",
      "parameters": [
        "package1",
        "ado_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "package2",
        "ado_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "package3",
        "ado_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "package4",
        "betar_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "package5",
        "betar_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "airplane1",
        "duran_airport"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "ado_truck",
        "ado_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "betar_truck",
        "betar_storage"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "colin_truck",
        "colin_airport"
      ]
    },
    {
      "name": "at",
      "parameters": [
        "duran_truck",
        "duran_airport"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "ado_storage",
        "ado"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "ado_airport",
        "ado"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "betar_storage",
        "betar"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "betar_airport",
        "betar"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "bal_street",
        "betar"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "colin_airport",
        "colin"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "cli_promenade",
        "colin"
      ]
    },
    {
      "name": "in_city",
      "parameters": [
        "duran_airport",
        "duran"
      ]
    }
  ],
  "goal_state": {},
  "feedback": [],
  "pddl_domain": null,
  "pddl_problem": null
}